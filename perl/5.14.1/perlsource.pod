
=encoding utf8

=for comment
Consistent formatting of this file is achieved with:
  perl ./Porting/podtidy pod/perlsource.pod

=head1 NAME

=begin original

perlsource - A guide to the Perl source tree

=end original

perlsource - Perl のソースツリーのガイド

=head1 DESCRIPTION

=begin original

This document describes the layout of the Perl source tree. If you're hacking
on the Perl core, this will help you find what you're looking for.

=end original

この文書は、Perl ソースツリーのレイアウトを記述しています。
Perl コアをハックする場合は、これがあなたの探しているものを見つける
助けになるでしょう。

=head1 FINDING YOUR WAY AROUND

(進む方向を見つける)

=begin original

The Perl source tree is big. Here's some of the thing you'll find in it:

=end original

Perl ソースツリーは大きいです。
以下はその中で見つけられるものです:

=head2 C code

(C コード)

=begin original

The C source code and header files mostly live in the root of the source
tree. There are a few platform-specific directories which contain C code. In
addition, some of the modules shipped with Perl include C or XS code.

=end original

The C source code and header files mostly live in the root of the source
tree. There are a few platform-specific directories which contain C code. In
addition, some of the modules shipped with Perl include C or XS code.
(TBT)

=begin original

See L<perlinterp> for more details on the files that make up the Perl
interpreter, as well as details on how it works.

=end original

See L<perlinterp> for more details on the files that make up the Perl
interpreter, as well as details on how it works.
(TBT)

=head2 Core modules

(コアモジュール)

=begin original

Modules shipped as part of the Perl core live in four subdirectories. Two of
these directories contain modules that live in the core, and two contain
modules that can also be released separately on CPAN. Modules which can be
released on cpan are known as "dual-life" modules.

=end original

Modules shipped as part of the Perl core live in four subdirectories. Two of
these directories contain modules that live in the core, and two contain
modules that can also be released separately on CPAN. Modules which can be
released on cpan are known as "dual-life" modules.
(TBT)

=over 4

=item * F<lib/>

=begin original

This directory contains pure-Perl modules which are only released as part of
the core. This directory contains I<all> of the modules and their tests,
unlike other core modules.

=end original

This directory contains pure-Perl modules which are only released as part of
the core. This directory contains I<all> of the modules and their tests,
unlike other core modules.
(TBT)

=item * F<ext/>

=begin original

This directory contains XS-using modules which are only released as part of
the core. These modules generally have their F<Makefile.PL> and are laid out
more like a typical CPAN module.

=end original

This directory contains XS-using modules which are only released as part of
the core. These modules generally have their F<Makefile.PL> and are laid out
more like a typical CPAN module.
(TBT)

=item * F<dist/>

=begin original

This directory is for dual-life modules where the blead source is
canonical. Note that some modules in this directory may not yet have been
released separately on CPAN.

=end original

This directory is for dual-life modules where the blead source is
canonical. Note that some modules in this directory may not yet have been
released separately on CPAN.
(TBT)

=item * F<cpan/>

=begin original

This directory contains dual-life modules where the CPAN module is
canonical. Do not patch these modules directly! Changes to these modules
should be submitted to the maintainer of the CPAN module. Once those changes
are applied and released, the new version of the module will be incorporated
into the core.

=end original

This directory contains dual-life modules where the CPAN module is
canonical. Do not patch these modules directly! Changes to these modules
should be submitted to the maintainer of the CPAN module. Once those changes
are applied and released, the new version of the module will be incorporated
into the core.
(TBT)

=back

=begin original

For some dual-life modules, it has not yet been determined if the CPAN version
or the blead source is canonical. Until that is done, those modules should be
in F<cpan/>.

=end original

For some dual-life modules, it has not yet been determined if the CPAN version
or the blead source is canonical. Until that is done, those modules should be
in F<cpan/>.
(TBT)

=head2 Tests

(テスト)

=begin original

The Perl core has an extensive test suite. If you add new tests (or new
modules with tests), you may need to update the F<t/TEST> file so that the
tests are run.

=end original

The Perl core has an extensive test suite. If you add new tests (or new
modules with tests), you may need to update the F<t/TEST> file so that the
tests are run.
(TBT)

=over 4

=item * Module tests

=begin original

Tests for core modules in the F<lib/> directory are right next to the module
itself. For example, we have F<lib/strict.pm> and F<lib/strict.t>.

=end original

Tests for core modules in the F<lib/> directory are right next to the module
itself. For example, we have F<lib/strict.pm> and F<lib/strict.t>.
(TBT)

=begin original

Tests for modules in F<ext/> and the dual-life modules are in F<t/>
subdirectories for each module, like a standard CPAN distribution.

=end original

Tests for modules in F<ext/> and the dual-life modules are in F<t/>
subdirectories for each module, like a standard CPAN distribution.
(TBT)

=item * F<t/base/>

=begin original

Tests for the absolute basic functionality of Perl. This includes C<if>, basic
file reads and writes, simple regexes, etc. These are run first in the test
suite and if any of them fail, something is I<really> broken.

=end original

Perl の絶対的な基本機能をテストします。
これには C<if>、基本的なファイルの読み書き、単純な正規表現などを含みます。
これらはテストスイートで最初に実行され、それらのいずれかが失敗した場合、
何かが I<本当に> 壊れていることになります。

=item * F<t/cmd/>

=begin original

Tests for basic control structures, C<if/else>, C<while>,
subroutines, etc.

=end original

これらは、基本制御構造、C<if/else>、C<while>、サブルーチンなどを
テストします。

=item * F<t/comp/>

=begin original

Tests for basic issues of how Perl parses and compiles itself.

=end original

Perl の構文解析およびコンパイル方法に関する基本的な問題をテストします。

=item * F<t/io/>

=begin original

Tests for built-in IO functions, including command line arguments.

=end original

コマンドライン引数を含む組み込み IO 関数をテストします。

=item * F<t/mro/>

=begin original

Tests for perl's method resolution order implementations (see L<mro>).

=end original

perl のメソッド解決順序実装(L<mro> を参照)をテストします。

=item * F<t/op/>

=begin original

Tests for perl's built in functions that don't fit into any of the
other directories.

=end original

perl に組み込まれている関数のうち、他のどのディレクトリにも適合しない
関数をテストします。

=item * F<t/re/>

=begin original

Tests for regex related functions or behaviour. (These used to live in
t/op).

=end original

正規表現関係の関数や振る舞いに関するテストをします。
(これらは以前は t/op にありました)。

=item * F<t/run/>

=begin original

Tests for features of how perl actually runs, including exit codes and
handling of PERL* environment variables.

=end original

終了コードや PERL* 環境変数の処理など、perl が
実際にどのように実行されるかをテストします。

=item * F<t/uni/>

=begin original

Tests for the core support of Unicode.

=end original

Unicode のコア対応をテストします。

=item * F<t/win32/>

=begin original

Windows-specific tests.

=end original

Windows 固有のテスト。

=item * F<t/porting/>

=begin original

Tests the state of the source tree for various common errors. For example, it
tests that everyone who is listed in the git log has a corresponding entry in
the F<AUTHORS> file.

=end original

Tests the state of the source tree for various common errors. For example, it
tests that everyone who is listed in the git log has a corresponding entry in
the F<AUTHORS> file.
(TBT)

=item * F<t/lib/>

=begin original

The old home for the module tests, you shouldn't put anything new in
here. There are still some bits and pieces hanging around in here that
need to be moved. Perhaps you could move them?  Thanks!

=end original

モジュールテストの古いホームです; ここに新しいものを置くべきではありません。
ここにはまだ動かす必要のあるいくつかの断片が残っています。
それらを動かすことはできますか?
ありがとう!

=item * F<t/x2p>

=begin original

A test suite for the s2p converter.

=end original

s2p コンバータ用のテストスイート。

=back

=head2 Documentation

(文書)

=begin original

All of the core documentation intended for end users lives in
F<pod/>. Individual modules in F<lib/>, F<ext/>, F<dist/>, and F<cpan/>
usually have their own documentation, either in the F<Module.pm> file or an
accompanying F<Module.pod> file.

=end original

All of the core documentation intended for end users lives in
F<pod/>. Individual modules in F<lib/>, F<ext/>, F<dist/>, and F<cpan/>
usually have their own documentation, either in the F<Module.pm> file or an
accompanying F<Module.pod> file.
(TBT)

=begin original

Finally, documentation intended for core Perl developers lives in the
F<Porting/> directory.

=end original

Finally, documentation intended for core Perl developers lives in the
F<Porting/> directory.
(TBT)

=head2 Hacking toolks and documentation

(ツールと文書をハックする)

=begin original

The F<Porting> directory contains a grab bag of code and documentation
intended to help porters work on Perl. Some of the highlights include:

=end original

The F<Porting> directory contains a grab bag of code and documentation
intended to help porters work on Perl. Some of the highlights include:
(TBT)

=over 4

=item * F<check*>

=begin original

These are scripts which will check the source things like ANSI C violations,
POD encoding issues, etc.

=end original

These are scripts which will check the source things like ANSI C violations,
POD encoding issues, etc.
(TBT)

=item * F<Maintainers>, F<Maintainers.pl>, and F<Maintainers.pm>

=begin original

These files contain information on who maintains which modules. Run C<perl
Porting/Maintainers -M Module::Name> to find out more information about a
dual-life module.

=end original

These files contain information on who maintains which modules. Run C<perl
Porting/Maintainers -M Module::Name> to find out more information about a
dual-life module.
(TBT)

=item * F<podtidy>

=begin original

Tidies a pod file. It's a good idea to run this on a pod file you've patched.

=end original

Tidies a pod file. It's a good idea to run this on a pod file you've patched.
(TBT)

=back

=head2 Build system

(ビルドシステム)

=begin original

The Perl build system starts with the F<Configure> script in the root
directory.

=end original

The Perl build system starts with the F<Configure> script in the root
directory.
(TBT)

=begin original

Platform-specific pieces of the build system also live in platform-specific
directories like F<win32/>, F<vms/>, etc.

=end original

Platform-specific pieces of the build system also live in platform-specific
directories like F<win32/>, F<vms/>, etc.
(TBT)

=begin original

The F<Configure> script is ultimately responsible for generating a
F<Makefile>.

=end original

The F<Configure> script is ultimately responsible for generating a
F<Makefile>.
(TBT)

=begin original

The build system that Perl uses is called metaconfig. This system is
maintained separately from the Perl core.

=end original

The build system that Perl uses is called metaconfig. This system is
maintained separately from the Perl core.
(TBT)

=begin original

The metaconfig system has its own git repository. Please see its README file
in L<http://perl5.git.perl.org/metaconfig.git/> for more details.

=end original

The metaconfig system has its own git repository. Please see its README file
in L<http://perl5.git.perl.org/metaconfig.git/> for more details.
(TBT)

=begin original

The F<Cross> directory contains various files related to cross-compiling
Perl. See F<Cross/README> for more details.

=end original

The F<Cross> directory contains various files related to cross-compiling
Perl. See F<Cross/README> for more details.
(TBT)

=head2 F<AUTHORS>

=begin original

This file everyone who's contributed to Perl. If you submit a patch, you
should add your name to this file as part of the patch.

=end original

This file everyone who's contributed to Perl. If you submit a patch, you
should add your name to this file as part of the patch.
(TBT)

=head2 F<MANIFEST>

=begin original

The F<MANIFEST> file in the root of the source tree contains a list of every
file in the Perl core, as well as a brief description of each file.

=end original

The F<MANIFEST> file in the root of the source tree contains a list of every
file in the Perl core, as well as a brief description of each file.
(TBT)

=begin original

You can get an overview of all the files with this command:

=end original

You can get an overview of all the files with this command:
(TBT)

  % perl -lne 'print if /^[^\/]+\.[ch]\s+/' MANIFEST

=begin meta

Translate: SHIRAKATA Kentaro <argrath@ub32.org>
Status: in progress

=end meta

