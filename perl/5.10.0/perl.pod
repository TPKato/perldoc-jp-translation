
=encoding euc-jp

=head1 NAME

=begin original

perl - Practical Extraction and Report Language

=end original

perl - Practical Extraction and Report Language

=head1 SYNOPSIS

B<perl>	S<[ B<-sTtuUWX> ]>
	S<[ B<-hv> ] [ B<-V>[:I<configvar>] ]>
	S<[ B<-cw> ] [ B<-d>[B<t>][:I<debugger>] ] [ B<-D>[I<number/list>] ]>
	S<[ B<-pna> ] [ B<-F>I<pattern> ] [ B<-l>[I<octal>] ] [ B<-0>[I<octal/hexadecimal>] ]>
	S<[ B<-I>I<dir> ] [ B<-m>[B<->]I<module> ] [ B<-M>[B<->]I<'module...'> ] [ B<-f> ]>
	S<[ B<-C [I<number/list>] >]>
	S<[ B<-P> ]>
	S<[ B<-S> ]>
	S<[ B<-x>[I<dir>] ]>
	S<[ B<-i>[I<extension>] ]>
	S<[ B<-e> I<'command'> ] [ B<--> ] [ I<programfile> ] [ I<argument> ]...>

=begin original

If you're new to Perl, you should start with L<perlintro>, which is a 
general intro for beginners and provides some background to help you
navigate the rest of Perl's extensive documentation.

=end original

If you're new to Perl, you should start with L<perlintro>, which is a 
general intro for beginners and provides some background to help you
navigate the rest of Perl's extensive documentation.
(TBT)

=begin original

For ease of access, the Perl manual has been split up into several sections.

=end original

参照しやすいように Perl のマニュアルは、いくつかの節に分割しています。

=head2 Overview

    perl		Perl overview (this section)
    perlintro		Perl introduction for beginners
    perltoc		Perl documentation table of contents

=head2 Tutorials

    perlreftut		Perl references short introduction
    perldsc		Perl data structures intro
    perllol		Perl data structures: arrays of arrays

    perlrequick 	Perl regular expressions quick start
    perlretut		Perl regular expressions tutorial

    perlboot		Perl OO tutorial for beginners
    perltoot		Perl OO tutorial, part 1
    perltooc		Perl OO tutorial, part 2
    perlbot		Perl OO tricks and examples

    perlstyle		Perl style guide

    perlcheat		Perl cheat sheet
    perltrap		Perl traps for the unwary
    perldebtut		Perl debugging tutorial

    perlfaq		Perl frequently asked questions
      perlfaq1		General Questions About Perl
      perlfaq2		Obtaining and Learning about Perl
      perlfaq3		Programming Tools
      perlfaq4		Data Manipulation
      perlfaq5		Files and Formats
      perlfaq6		Regexes
      perlfaq7		Perl Language Issues
      perlfaq8		System Interaction
      perlfaq9		Networking

=head2 Reference Manual

    perlsyn		Perl syntax
    perldata		Perl data structures
    perlop		Perl operators and precedence
    perlsub		Perl subroutines
    perlfunc		Perl built-in functions
      perlopentut	Perl open() tutorial
      perlpacktut	Perl pack() and unpack() tutorial
    perlpod		Perl plain old documentation
    perlpodspec 	Perl plain old documentation format specification
    perlrun		Perl execution and options
    perldiag		Perl diagnostic messages
    perllexwarn 	Perl warnings and their control
    perldebug		Perl debugging
    perlvar		Perl predefined variables
    perlre		Perl regular expressions, the rest of the story
    perlrebackslash	Perl regular expression backslash sequences
    perlrecharclass	Perl regular expression character classes
    perlreref		Perl regular expressions quick reference
    perlref		Perl references, the rest of the story
    perlform		Perl formats
    perlobj		Perl objects
    perltie		Perl objects hidden behind simple variables
      perldbmfilter	Perl DBM filters

    perlipc		Perl interprocess communication
    perlfork		Perl fork() information
    perlnumber		Perl number semantics

    perlthrtut		Perl threads tutorial
      perlothrtut	Old Perl threads tutorial

    perlport		Perl portability guide
    perllocale		Perl locale support
    perluniintro	Perl Unicode introduction
    perlunicode 	Perl Unicode support
    perlunifaq		Perl Unicode FAQ
    perlunitut		Perl Unicode tutorial
    perlebcdic		Considerations for running Perl on EBCDIC platforms

    perlsec		Perl security

    perlmod		Perl modules: how they work
    perlmodlib		Perl modules: how to write and use
    perlmodstyle	Perl modules: how to write modules with style
    perlmodinstall	Perl modules: how to install from CPAN
    perlnewmod		Perl modules: preparing a new module for distribution
    perlpragma		Perl modules: writing a user pragma

    perlutil		utilities packaged with the Perl distribution

    perlcompile 	Perl compiler suite intro

    perlfilter		Perl source filters

    perlglossary	Perl Glossary

=head2 Internals and C Language Interface

    perlembed		Perl ways to embed perl in your C or C++ application
    perldebguts 	Perl debugging guts and tips
    perlxstut		Perl XS tutorial
    perlxs		Perl XS application programming interface
    perlclib		Internal replacements for standard C library functions
    perlguts		Perl internal functions for those doing extensions
    perlcall		Perl calling conventions from C
    perlreapi		Perl regular expression plugin interface
    perlreguts		Perl regular expression engine internals

    perlapi		Perl API listing (autogenerated)
    perlintern		Perl internal functions (autogenerated)
    perliol		C API for Perl's implementation of IO in Layers
    perlapio		Perl internal IO abstraction interface

    perlhack		Perl hackers guide

=head2 Miscellaneous

    perlbook		Perl book information
    perlcommunity	Perl community information
    perltodo		Perl things to do

    perldoc		Look up Perl documentation in Pod format

    perlhist		Perl history records
    perldelta		Perl changes since previous version
    perl595delta	Perl changes in version 5.9.5
    perl594delta	Perl changes in version 5.9.4
    perl593delta	Perl changes in version 5.9.3
    perl592delta	Perl changes in version 5.9.2
    perl591delta	Perl changes in version 5.9.1
    perl590delta	Perl changes in version 5.9.0
    perl588delta	Perl changes in version 5.8.8
    perl587delta	Perl changes in version 5.8.7
    perl586delta	Perl changes in version 5.8.6
    perl585delta	Perl changes in version 5.8.5
    perl584delta	Perl changes in version 5.8.4
    perl583delta	Perl changes in version 5.8.3
    perl582delta	Perl changes in version 5.8.2
    perl581delta	Perl changes in version 5.8.1
    perl58delta 	Perl changes in version 5.8.0
    perl573delta	Perl changes in version 5.7.3
    perl572delta	Perl changes in version 5.7.2
    perl571delta	Perl changes in version 5.7.1
    perl570delta	Perl changes in version 5.7.0
    perl561delta	Perl changes in version 5.6.1
    perl56delta 	Perl changes in version 5.6
    perl5005delta	Perl changes in version 5.005
    perl5004delta	Perl changes in version 5.004

    perlartistic	Perl Artistic License
    perlgpl		GNU General Public License

=head2 Language-Specific

    perlcn		Perl for Simplified Chinese (in EUC-CN)
    perljp		Perl for Japanese (in EUC-JP)
    perlko		Perl for Korean (in EUC-KR)
    perltw		Perl for Traditional Chinese (in Big5)

=head2 Platform-Specific

    perlaix		Perl notes for AIX
    perlamiga		Perl notes for AmigaOS
    perlapollo		Perl notes for Apollo DomainOS
    perlbeos		Perl notes for BeOS
    perlbs2000		Perl notes for POSIX-BC BS2000
    perlce		Perl notes for WinCE
    perlcygwin		Perl notes for Cygwin
    perldgux		Perl notes for DG/UX
    perldos		Perl notes for DOS
    perlepoc		Perl notes for EPOC
    perlfreebsd 	Perl notes for FreeBSD
    perlhpux		Perl notes for HP-UX
    perlhurd		Perl notes for Hurd
    perlirix		Perl notes for Irix
    perllinux		Perl notes for Linux
    perlmachten 	Perl notes for Power MachTen
    perlmacos		Perl notes for Mac OS (Classic)
    perlmacosx		Perl notes for Mac OS X
    perlmint		Perl notes for MiNT
    perlmpeix		Perl notes for MPE/iX
    perlnetware 	Perl notes for NetWare
    perlopenbsd 	Perl notes for OpenBSD
    perlos2		Perl notes for OS/2
    perlos390		Perl notes for OS/390
    perlos400		Perl notes for OS/400
    perlplan9		Perl notes for Plan 9
    perlqnx		Perl notes for QNX
    perlriscos		Perl notes for RISC OS
    perlsolaris 	Perl notes for Solaris
    perlsymbian 	Perl notes for Symbian
    perltru64		Perl notes for Tru64
    perluts		Perl notes for UTS
    perlvmesa		Perl notes for VM/ESA
    perlvms		Perl notes for VMS
    perlvos		Perl notes for Stratus VOS
    perlwin32		Perl notes for Windows

=begin original

By default, the manpages listed above are installed in the 
F</usr/local/man/> directory.  

=end original

By default, the manpages listed above are installed in the 
F</usr/local/man/> directory.  
(TBT)

=begin original

Extensive additional documentation for Perl modules is available.  The
default configuration for perl will place this additional documentation
in the F</usr/local/lib/perl5/man> directory (or else in the F<man>
subdirectory of the Perl library directory).  Some of this additional
documentation is distributed standard with Perl, but you'll also find
documentation for third-party modules there.

=end original

Extensive additional documentation for Perl modules is available.  The
default configuration for perl will place this additional documentation
in the F</usr/local/lib/perl5/man> directory (or else in the F<man>
subdirectory of the Perl library directory).  Some of this additional
documentation is distributed standard with Perl, but you'll also find
documentation for third-party modules there.
(TBT)

=begin original

You should be able to view Perl's documentation with your man(1)
program by including the proper directories in the appropriate start-up
files, or in the MANPATH environment variable.  To find out where the
configuration has installed the manpages, type:

=end original

You should be able to view Perl's documentation with your man(1)
program by including the proper directories in the appropriate start-up
files, or in the MANPATH environment variable.  To find out where the
configuration has installed the manpages, type:
(TBT)

    perl -V:man.dir

=begin original

If the directories have a common stem, such as F</usr/local/man/man1>
and F</usr/local/man/man3>, you need only to add that stem
(F</usr/local/man>) to your man(1) configuration files or your MANPATH
environment variable.  If they do not share a stem, you'll have to add
both stems.

=end original

If the directories have a common stem, such as F</usr/local/man/man1>
and F</usr/local/man/man3>, you need only to add that stem
(F</usr/local/man>) to your man(1) configuration files or your MANPATH
environment variable.  If they do not share a stem, you'll have to add
both stems.
(TBT)

=begin original

If that doesn't work for some reason, you can still use the
supplied F<perldoc> script to view module information.  You might
also look into getting a replacement man program.

=end original

If that doesn't work for some reason, you can still use the
supplied F<perldoc> script to view module information.  You might
also look into getting a replacement man program.
(TBT)

=begin original

If something strange has gone wrong with your program and you're not
sure where you should look for help, try the B<-w> switch first.  It
will often point out exactly where the trouble is.

=end original

プログラムの実行時に何か変なことが起こって、どこを参照したら
よいかわからない場合には、取り敢えず B<-w> スイッチを試してみてください。
これで、問題か所を特定できる場合も、多々あります。

=head1 DESCRIPTION

=begin original

Perl is a language optimized for scanning arbitrary
text files, extracting information from those text files, and printing
reports based on that information.  It's also a good language for many
system management tasks.  The language is intended to be practical
(easy to use, efficient, complete) rather than beautiful (tiny,
elegant, minimal).

=end original

Perl は、テキストファイルを読み取り、そこから情報を引き出し、
その情報を元に様々な報告を行なうように設計された言語です。
また、多くのシステムマネジメントの作業を行なうのに
適した言語でもあります。
この言語は、綺麗さ (小規模、エレガント、最少) ではなく、
実用性 (使い易さ、効率、完全性) を目指しています。

=begin original

Perl combines (in the author's opinion, anyway) some of the best
features of C, B<sed>, B<awk>, and B<sh>, so people familiar with
those languages should have little difficulty with it.  (Language
historians will also note some vestiges of B<csh>, Pascal, and even
BASIC-PLUS.)  Expression syntax corresponds closely to C
expression syntax.  Unlike most Unix utilities, Perl does not
arbitrarily limit the size of your data--if you've got the memory,
Perl can slurp in your whole file as a single string.  Recursion is of
unlimited depth.  And the tables used by hashes (sometimes called
"associative arrays") grow as necessary to prevent degraded
performance.  Perl can use sophisticated pattern matching techniques to
scan large amounts of data quickly.  Although optimized for
scanning text, Perl can also deal with binary data, and can make dbm
files look like hashes.  Setuid Perl scripts are safer than C programs
through a dataflow tracing mechanism that prevents many stupid
security holes.

=end original

Perl は、(少なくとも作者の意見では) C, B<sed>, B<awk>, B<sh> の良い部分を
組み合わせているので、これらの言語に馴染みのある方には、それほど
難しいものではないでしょう。
(言語歴史学者はまた、B<csh>, Pascal あるいは BASIC-PLUS の痕跡にも
気付くかもしれません。)
式の構文は、C の式の構文に対応したものとなっています。
多くの UNIX のユーティリティとは違って、Perl はデータの大きさに
恣意的な制限を設けません。
つまり Perl では、メモリさえ十分にあれば、ファイルを丸ごと 1 つの
文字列に入れてしまうこともできます。
再帰の深さにも制限がありません。
また、ハッシュ(「連想配列」と呼ばれることもあります)が使用するテーブルは、
パフォーマンスを損なわないように、必要に応じて、自動的に大きくなります。
Perl では、大量のデータをすばやく走査できるように、工夫を凝らした
パターンマッチの技術が使えます。
テキストの走査のために設計されてはいますが、Perl では、
バイナリデータを扱うこともできますし、
dbm ファイルをハッシュのようにして扱うこともできるようになっています。
データフロートレース機構を使って、単純ミスによるセキュリティホールを
塞ぐようにしているため、多くの場合、setuid Perl スクリプトは C の
プログラムよりも安全です。

=begin original

If you have a problem that would ordinarily use B<sed> or B<awk> or
B<sh>, but it exceeds their capabilities or must run a little faster,
and you don't want to write the silly thing in C, then Perl may be for
you.  There are also translators to turn your B<sed> and B<awk>
scripts into Perl scripts.

=end original

普通は B<sed> や B<awk> や B<sh> で書くような問題でも、少し荷が
重すぎるようなとき、多少でも実行速度を速くしなければならないときや、
C で書く程でもないときには、Perl が最適でしょう。
また、B<sed> や B<awk> のスクリプトを Perl のスクリプトに変換する
トランスレータも用意されています。

=begin original

But wait, there's more...

=end original

ちょっと待ってください、まだあります...

=begin original

Begun in 1993 (see L<perlhist>), Perl version 5 is nearly a complete
rewrite that provides the following additional benefits:

=end original

1993 年から(L<perlhist> を参照してください)、Perl version 5 は、
以下のようなことを追加するためにほとんど全て書き直しています:

=over 4

=item *

=begin original

modularity and reusability using innumerable modules 

=end original

無数のモジュールによるモジュール性と再利用性

=begin original

Described in L<perlmod>, L<perlmodlib>, and L<perlmodinstall>.

=end original

L<perlmod>, L<perlmodlib>, L<perlmodinstall> に記述しています。

=item *

=begin original

embeddable and extensible 

=end original

組み込み容易性と拡張性

=begin original

Described in L<perlembed>, L<perlxstut>, L<perlxs>, L<perlcall>,
L<perlguts>, and L<xsubpp>.

=end original

Described in L<perlembed>, L<perlxstut>, L<perlxs>, L<perlcall>,
L<perlguts>, and L<xsubpp>.
(TBT)

=item *

=begin original

roll-your-own magic variables (including multiple simultaneous DBM
implementations)

=end original

roll-your-own magic variables (including multiple simultaneous DBM
implementations)
(TBT)

=begin original

Described in L<perltie> and L<AnyDBM_File>.

=end original

L<perltie> と L<AnyDBM_File> に記述しています。

=item *

=begin original

subroutines can now be overridden, autoloaded, and prototyped

=end original

サブルーチン定義がオーバライド、オートロード、プロタイプ宣言可能に

=begin original

Described in L<perlsub>.

=end original

L<perlsub> に記述しています。

=item *

=begin original

arbitrarily nested data structures and anonymous functions

=end original

任意の多重データ構造と無名関数

=begin original

Described in L<perlreftut>, L<perlref>, L<perldsc>, and L<perllol>.

=end original

L<perlreftut>, L<perlref>, L<perldsc>, L<perllol> に記述しています。

=item *

=begin original

object-oriented programming

=end original

オブジェクト指向プログラミング

=begin original

Described in L<perlobj>, L<perlboot>, L<perltoot>, L<perltooc>,
and L<perlbot>.

=end original

Described in L<perlobj>, L<perlboot>, L<perltoot>, L<perltooc>,
and L<perlbot>.
(TBT)

=item *

=begin original

support for light-weight processes (threads)

=end original

support for light-weight processes (threads)
(TBT)

=begin original

Described in L<perlthrtut> and L<threads>.

=end original

Described in L<perlthrtut> and L<threads>.
(TBT)

=item *

=begin original

support for Unicode, internationalization, and localization

=end original

support for Unicode, internationalization, and localization
(TBT)

=begin original

Described in L<perluniintro>, L<perllocale> and L<Locale::Maketext>.

=end original

Described in L<perluniintro>, L<perllocale> and L<Locale::Maketext>.
(TBT)

=item *

=begin original

lexical scoping

=end original

レキシカルスコープ

=begin original

Described in L<perlsub>.

=end original

Described in L<perlsub>.
(TBT)

=item *

=begin original

regular expression enhancements

=end original

正規表現の拡張

=begin original

Described in L<perlre>, with additional examples in L<perlop>.

=end original

Described in L<perlre>, with additional examples in L<perlop>.
(TBT)

=item *

=begin original

enhanced debugger and interactive Perl environment,
with integrated editor support

=end original

enhanced debugger and interactive Perl environment,
with integrated editor support
(TBT)

=begin original

Described in L<perldebtut>, L<perldebug> and L<perldebguts>.

=end original

Described in L<perldebtut>, L<perldebug> and L<perldebguts>.
(TBT)

=item *

=begin original

POSIX 1003.1 compliant library

=end original

POSIX 1003.1 準拠ライブラリ

=begin original

Described in L<POSIX>.

=end original

L<POSIX> に記述しています。

=back

=begin original

Okay, that's I<definitely> enough hype.

=end original

さあ、誇大広告にはこれくらいにしましょう。

=head1 AVAILABILITY

=begin original

Perl is available for most operating systems, including virtually
all Unix-like platforms.  See L<perlport/"Supported Platforms">
for a listing.

=end original

Perl is available for most operating systems, including virtually
all Unix-like platforms.  See L<perlport/"Supported Platforms">
for a listing.
(TBT)

=head1 ENVIRONMENT

=begin original

See L<perlrun>.

=end original

L<perlrun> を参照してください。

=head1 AUTHOR

=begin original

Larry Wall <larry@wall.org>, with the help of oodles of other folks.

=end original

Larry Wall <lwall@netlabs.com>, 多くの方の助力を得つつ。

=begin original

If your Perl success stories and testimonials may be of help to others 
who wish to advocate the use of Perl in their applications, 
or if you wish to simply express your gratitude to Larry and the 
Perl developers, please write to perl-thanks@perl.org .

=end original

If your Perl success stories and testimonials may be of help to others 
who wish to advocate the use of Perl in their applications, 
or if you wish to simply express your gratitude to Larry and the 
Perl developers, please write to perl-thanks@perl.org .
(TBT)

=head1 FILES

=begin original

 "@INC"			locations of perl libraries

=end original

 "@INC"                 perl ライブラリの位置

=head1 SEE ALSO

=begin original

 a2p	awk to perl translator
 s2p	sed to perl translator

=end original

 a2p    awk から perl へのトランスレータ
 s2p    sed から perl へのトランスレータ

 http://www.perl.org/       the Perl homepage
 http://www.perl.com/       Perl articles (O'Reilly)
 http://www.cpan.org/       the Comprehensive Perl Archive
 http://www.pm.org/         the Perl Mongers

=head1 DIAGNOSTICS

=begin original

The C<use warnings> pragma (and the B<-w> switch) produces some 
lovely diagnostics.

=end original

C<use warnings> プラグマ (および B<-w> スイッチ)は、
幾分わかりやすい診断メッセージを出します。

=begin original

See L<perldiag> for explanations of all Perl's diagnostics.  The C<use
diagnostics> pragma automatically turns Perl's normally terse warnings
and errors into these longer forms.

=end original

すべての Perl の診断メッセージについては、L<perldiag> を
参照してください。
C<use diagnostics> プラグマは、
automatically turns Perl's normally terse warnings
and errors into these longer forms.
(TBT)

=begin original

Compilation errors will tell you the line number of the error, with an
indication of the next token or token type that was to be examined.
(In a script passed to Perl via B<-e> switches, each
B<-e> is counted as one line.)

=end original

コンパイル時のエラーでは、エラーの起こった行番号に、次に
調べられるはずだったトークンかトークンの型を示します。
(スクリプトが B<-e> スイッチで Perl に渡される場合には、B<-e> スイッチ
1 つが 1 行とカウントされます。)

=begin original

Setuid scripts have additional constraints that can produce error
messages such as "Insecure dependency".  See L<perlsec>.

=end original

setuid スクリプトでは、制限事項が増えるため、"Insecure dependency" と
いったエラーメッセージが表示されることがあります。
L<perlsec> を参照してください。

=begin original

Did we mention that you should definitely consider using the B<-w>
switch?

=end original

絶対に B<-w> スイッチを使った方が良いっていうのは、もう書きましたっけ?

=head1 BUGS

=begin original

The B<-w> switch is not mandatory.

=end original

B<-w> スイッチが必須になっていません。

=begin original

Perl is at the mercy of your machine's definitions of various
operations such as type casting, atof(), and floating-point
output with sprintf().

=end original

Perl は型のキャスト、atof()、sprintf() による浮動小数点出力のような
様々な操作のマシンごとの定義に依存します。

=begin original

If your stdio requires a seek or eof between reads and writes on a
particular stream, so does Perl.  (This doesn't apply to sysread()
and syswrite().)

=end original

使用している標準入出力ライブラリが、read と write の間に
seek や eof が必要なものであれば、Perl でも同様となります。
(ただし、sysread() や syswrite() には適用されません。)

=begin original

While none of the built-in data types have any arbitrary size limits
(apart from memory size), there are still a few arbitrary limits:  a
given variable name may not be longer than 251 characters.  Line numbers
displayed by diagnostics are internally stored as short integers,
so they are limited to a maximum of 65535 (higher numbers usually being
affected by wraparound).

=end original

組み込みのデータ型には (メモリサイズからくるものを除いて) 恣意的な
サイズの制限はありませんが、それでもいくつかの恣意的制限は存在します:
どの変数名も 251 文字より長くてはなりません。
Line numbers
displayed by diagnostics are internally stored as short integers,
so they are limited to a maximum of 65535 (higher numbers usually being
affected by wraparound).
(TBT)

=begin original

You may mail your bug reports (be sure to include full configuration
information as output by the myconfig program in the perl source
tree, or by C<perl -V>) to perlbug@perl.org .  If you've succeeded
in compiling perl, the B<perlbug> script in the F<utils/> subdirectory
can be used to help mail in a bug report.

=end original

You may mail your bug reports (be sure to include full configuration
information as output by the myconfig program in the perl source
tree, or by C<perl -V>) to perlbug@perl.org .  If you've succeeded
in compiling perl, the B<perlbug> script in the F<utils/> subdirectory
can be used to help mail in a bug report.
(TBT)

=begin original

Perl actually stands for Pathologically Eclectic Rubbish Lister, but
don't tell anyone I said that.

=end original

Perl は本当は「病的折衷主義ガラクタ出力機」(Pathologically
Eclectic Rubbish Lister) を意味していますが、私がそういった
事をばらしてはいけません。

=head1 NOTES

=begin original

The Perl motto is "There's more than one way to do it."  Divining
how many more is left as an exercise to the reader.

=end original

Perl のモットーは「やり方は 1 通りではない。」ということです。
このマニュアルを、後いくつに分割できるかは、宿題とします。

=begin original

The three principal virtues of a programmer are Laziness,
Impatience, and Hubris.  See the Camel Book for why.

=end original

プログラマの 3 つの美徳は、無精、短気、傲慢です。
理由は、ラクダ本を参照してください。

=begin meta

Created: 吉村 寿人 <JAE00534@niftyserve.or.jp> (5.000)
Updated: Kentaro Shirakata <argrath@ub32.org> (5.10.0)
License: GPL or Artistic

=end meta

