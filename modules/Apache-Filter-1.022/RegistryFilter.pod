=head1 名前 (NAME)

Apache::RegistryFilter - Apache::Filter チェーン内での Perl スクリプトの実行

=head1 概要 (SYNOPSIS)

 #httpd.conf 内

 PerlModule Apache::RegistryFilter

 # スクリプト出力を Apache::SSI に通す実行
 <Files ~ "\.pl$">
  PerlSetVar Filter on
  SetHandler perl-script
  PerlHandler Apache::RegistryFilter Apache::SSI
 </Files>

 # テンプレートを利用したいくつかの Perl コード生成、そしてその実行
 <Files ~ "\.tmpl$">
  PerlSetVar Filter on
  SetHandler perl-script
  PerlHandler YourModule::GenCode Apache::RegistryFilter
 </Files>

=head1 説明 (DESCRIPTION)

このモジュールは Apache::RegistryNG のサブクラスで、それの全ての機能を
含んでいます。二つの間の違いはこのモジュールは Apache::Filter
モジュールと共に利用できるというだけですが
Apache::RegistryNG では出来ません。

フィルタのセットアップ方法の情報は、Apache::Filter のドキュメントを
ご覧下さい。

=head1 両立しがたい事 (INCOMPATIBILITIES)

この時点で、あなたがあなたの Registry スクリプトにしなくてはいけないかも知れない
唯一の変更点は、非常に小さく、かつ判りづらい。すなわち、もし私が何も考えてなかったのなら
どんな変更でも他に必要ならどうか私に教えて下さい。

=over 4

=item * send_fd() を呼び出すべからず (Don't call send_fd())

もしあなたが Apache の $r->send_fd($filehandle) メソッドを呼び出すなら、その出力は
フィルタのチェーンを通してフィルタされる代わりにブラウザに直接送られます。
もしあなたのスクリプトがチェーン内の最後のフィルタならこれでいいですが、
そうでなければ明らかに動作しないでしょう。

=back

=head1 警告 (CAVEATS)

これは Apache::RegistryNG のサブクラスで、Apache::Registry ではありません
(これはサブクラス化するのに容易ではない)。Apache::RegistryNG は機能的に
Apache::Registry と同等であるとされていますが、それは十分なテストが
やや少ないです。

=head1 参考資料 (SEE ALSO)

perl(1), mod_perl(3), Apache::Filter(3)

=head1 作者 (AUTHOR)

Ken Williams <ken@forum.swarthmore.edu>

=head1 翻訳者

谷口公一 E<lt>taniguchi@users.sourceforge.jpE<gt>

